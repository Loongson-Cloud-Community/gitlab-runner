// Code generated by mockery v2.14.0. DO NOT EDIT.

package azure

import mock "github.com/stretchr/testify/mock"

// mockBlobTokenGenerator is an autogenerated mock type for the blobTokenGenerator type
type mockBlobTokenGenerator struct {
	mock.Mock
}

// Execute provides a mock function with given fields: name, options
func (_m *mockBlobTokenGenerator) Execute(name string, options *signedURLOptions) (string, error) {
	ret := _m.Called(name, options)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, *signedURLOptions) string); ok {
		r0 = rf(name, options)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *signedURLOptions) error); ok {
		r1 = rf(name, options)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockBlobTokenGenerator interface {
	mock.TestingT
	Cleanup(func())
}

// newMockBlobTokenGenerator creates a new instance of mockBlobTokenGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockBlobTokenGenerator(t mockConstructorTestingTnewMockBlobTokenGenerator) *mockBlobTokenGenerator {
	mock := &mockBlobTokenGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
