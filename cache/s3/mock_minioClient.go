// Code generated by mockery v1.1.0. DO NOT EDIT.

package s3

import (
	context "context"
	http "net/http"

	mock "github.com/stretchr/testify/mock"

	time "time"

	url "net/url"
)

// mockMinioClient is an autogenerated mock type for the minioClient type
type mockMinioClient struct {
	mock.Mock
}

// PresignHeader provides a mock function with given fields: ctx, method, bucketName, objectName, expires, reqParams, extraHeaders
func (_m *mockMinioClient) PresignHeader(ctx context.Context, method string, bucketName string, objectName string, expires time.Duration, reqParams url.Values, extraHeaders http.Header) (*url.URL, error) {
	ret := _m.Called(ctx, method, bucketName, objectName, expires, reqParams, extraHeaders)

	var r0 *url.URL
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, time.Duration, url.Values, http.Header) *url.URL); ok {
		r0 = rf(ctx, method, bucketName, objectName, expires, reqParams, extraHeaders)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*url.URL)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, string, time.Duration, url.Values, http.Header) error); ok {
		r1 = rf(ctx, method, bucketName, objectName, expires, reqParams, extraHeaders)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
