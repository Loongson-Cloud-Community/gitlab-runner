// Code generated by mockery v2.14.0. DO NOT EDIT.

package archive

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockNewArchiverFunc is an autogenerated mock type for the NewArchiverFunc type
type MockNewArchiverFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: w, dir, level
func (_m *MockNewArchiverFunc) Execute(w io.Writer, dir string, level CompressionLevel) (Archiver, error) {
	ret := _m.Called(w, dir, level)

	var r0 Archiver
	if rf, ok := ret.Get(0).(func(io.Writer, string, CompressionLevel) Archiver); ok {
		r0 = rf(w, dir, level)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Archiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(io.Writer, string, CompressionLevel) error); ok {
		r1 = rf(w, dir, level)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockNewArchiverFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNewArchiverFunc creates a new instance of MockNewArchiverFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNewArchiverFunc(t mockConstructorTestingTNewMockNewArchiverFunc) *MockNewArchiverFunc {
	mock := &MockNewArchiverFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
