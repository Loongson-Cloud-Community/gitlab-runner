// Code generated by mockery v2.14.0. DO NOT EDIT.

package archive

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockNewExtractorFunc is an autogenerated mock type for the NewExtractorFunc type
type MockNewExtractorFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: r, size, dir
func (_m *MockNewExtractorFunc) Execute(r io.ReaderAt, size int64, dir string) (Extractor, error) {
	ret := _m.Called(r, size, dir)

	var r0 Extractor
	if rf, ok := ret.Get(0).(func(io.ReaderAt, int64, string) Extractor); ok {
		r0 = rf(r, size, dir)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Extractor)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(io.ReaderAt, int64, string) error); ok {
		r1 = rf(r, size, dir)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockNewExtractorFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockNewExtractorFunc creates a new instance of MockNewExtractorFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockNewExtractorFunc(t mockConstructorTestingTNewMockNewExtractorFunc) *MockNewExtractorFunc {
	mock := &MockNewExtractorFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
