// Code generated by mockery v2.14.0. DO NOT EDIT.

package proxy

import mock "github.com/stretchr/testify/mock"

// MockPooler is an autogenerated mock type for the Pooler type
type MockPooler struct {
	mock.Mock
}

// Pool provides a mock function with given fields:
func (_m *MockPooler) Pool() Pool {
	ret := _m.Called()

	var r0 Pool
	if rf, ok := ret.Get(0).(func() Pool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Pool)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockPooler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockPooler creates a new instance of MockPooler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockPooler(t mockConstructorTestingTNewMockPooler) *MockPooler {
	mock := &MockPooler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
