// Code generated by mockery v2.14.0. DO NOT EDIT.

package auth_methods

import (
	mock "github.com/stretchr/testify/mock"
	vault "gitlab.com/gitlab-org/gitlab-runner/helpers/vault"
)

// MockFactory is an autogenerated mock type for the Factory type
type MockFactory struct {
	mock.Mock
}

// Execute provides a mock function with given fields: path, data
func (_m *MockFactory) Execute(path string, data Data) (vault.AuthMethod, error) {
	ret := _m.Called(path, data)

	var r0 vault.AuthMethod
	if rf, ok := ret.Get(0).(func(string, Data) vault.AuthMethod); ok {
		r0 = rf(path, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(vault.AuthMethod)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, Data) error); ok {
		r1 = rf(path, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockFactory creates a new instance of MockFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockFactory(t mockConstructorTestingTNewMockFactory) *MockFactory {
	mock := &MockFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
