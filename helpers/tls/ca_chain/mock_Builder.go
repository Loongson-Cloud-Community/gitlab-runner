// Code generated by mockery v2.14.0. DO NOT EDIT.

package ca_chain

import (
	tls "crypto/tls"

	mock "github.com/stretchr/testify/mock"
)

// MockBuilder is an autogenerated mock type for the Builder type
type MockBuilder struct {
	mock.Mock
}

// BuildChainFromTLSConnectionState provides a mock function with given fields: TLS
func (_m *MockBuilder) BuildChainFromTLSConnectionState(TLS *tls.ConnectionState) error {
	ret := _m.Called(TLS)

	var r0 error
	if rf, ok := ret.Get(0).(func(*tls.ConnectionState) error); ok {
		r0 = rf(TLS)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// String provides a mock function with given fields:
func (_m *MockBuilder) String() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewMockBuilder interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockBuilder creates a new instance of MockBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockBuilder(t mockConstructorTestingTNewMockBuilder) *MockBuilder {
	mock := &MockBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
