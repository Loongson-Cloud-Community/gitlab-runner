// Code generated by mockery v2.14.0. DO NOT EDIT.

package labels

import mock "github.com/stretchr/testify/mock"

// MockLabeler is an autogenerated mock type for the Labeler type
type MockLabeler struct {
	mock.Mock
}

// Labels provides a mock function with given fields: otherLabels
func (_m *MockLabeler) Labels(otherLabels map[string]string) map[string]string {
	ret := _m.Called(otherLabels)

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func(map[string]string) map[string]string); ok {
		r0 = rf(otherLabels)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	return r0
}

type mockConstructorTestingTNewMockLabeler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockLabeler creates a new instance of MockLabeler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockLabeler(t mockConstructorTestingTNewMockLabeler) *MockLabeler {
	mock := &MockLabeler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
